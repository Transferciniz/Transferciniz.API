name: Build and Deploy .NET API to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build the .NET project
        run: dotnet build --configuration Release --no-restore

      - name: Publish the .NET project
        run: dotnet publish --configuration Release --no-build --output ./publish

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DigitalOcean Container Registry
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login -u "username" --password-stdin registry.digitalocean.com

      - name: Build and push Docker image
        run: |
          docker build -t registry.digitalocean.com/transferciniz-container/transferciniz-api:latest .
          docker push registry.digitalocean.com/transferciniz-container/transferciniz-api:latest
        env:
          DOCKER_USERNAME: erdogansonmez@outlook.com
          DOCKER_PASSWORD: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        run: |
          sudo snap install kubectl --classic

      - name: Create kube directory
        run: |
          mkdir -p $HOME/.kube

      - name: Copy KUBECONFIG from repo
        run: |
          cp ./kubeconfig.yaml $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
        env:
          KUBECONFIG: $HOME/.kube/config
